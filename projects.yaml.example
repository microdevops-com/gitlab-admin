gitlab:
  url: https://gitlab.example.com
  author_email: commiter@example.com
  author_name: Commit Author
projects:
  - path: dev/projects/subgroup/project1 # mandatory
    active: True # mandatory
    description: My Project # mandatory
    visibility: internal # mandatory
    maintainers_group: dev/maintainer # optional
    deploy_keys: # optional
      - title: root@srv1.example.com
        key: ssh-ed25519 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA root@srv1.example.com
      - title: root@srv2.example.com
        key: ssh-ed25519 BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB root@srv2.example.com
    deploy_tokens: # optional
      - name: gitlab-deploy-token
        scopes:
          - read_registry
    resolve_outdated_diff_discussions: True # optional
    only_allow_merge_if_pipeline_succeeds: True # optional
    only_allow_merge_if_all_discussions_are_resolved: True # optional
    shared_runners_enabled: False # optional
    issues_enabled: False # optional
    wiki_enabled: False # optional
    packages_enabled: False # optional
    service_desk_enabled: False # optional
    approvals_before_merge: 1 # optional
    reset_approvals_on_push: True # optional
    disable_overriding_approvers_per_merge_request: True # optional
    merge_requests_author_approval: False # optional
    merge_requests_disable_committers_approval: True # optional
    require_password_to_approve: False # optional
    protected_branches: # optional, see https://docs.gitlab.com/ee/api/projects.html for access leveles
      - name: master
        push_access_level: 40
        merge_access_level: 40
        code_owner_approval_required: True
    protected_tags: # optional
      - name: 'v*'
        create_access_level: 40
    merge_request_approval_rules: # optional
      - name: QA
        groups:
          - dev/qa
        branch: master
        approvals_required: 1
    template: # mandatory for --template-projects
      path: .template # mandatory
      cmd: XXX=zzz ./test.sh # mandatory, runned as cd .template; XXX=zzz ./test.sh ../.projects/dev/projects/subgroup/project1
    specific_runners_enable: # optional, enable specific runners for projects, runners are identified by description field
      - dev-runner
      - prod-runner
    protected_environments: # optional, create and protect environments
      - name: prod
        deploy_access_level: 40
    variables: # optional
      - key: TEST1 # mandatory
        value: XXX1 # mandatory
        variable_type: env_var # mandatory, env_var or file
        protected: True # mandatory
        masked: False # mandatory
        environment_scope: '*' # mandatory
      - key: TEST1 # mandatory, we can have the same var in different scopes
        value: XXX1 # mandatory
        variable_type: env_var # mandatory, env_var or file
        protected: True # mandatory
        masked: False # mandatory
        environment_scope: 'staging' # mandatory
